/* 

Write a function which calculates the average of the numbers in a given list.
Note: Empty arrays should return 0.

*/

/*

Напишите функцию, которая вычисляет среднее значение чисел в заданном списке. 
Примечание. Пустые массивы должны возвращать 0.

*/

function findAverage(array) { // функция, с один вводным операндом(аргументом), которому дано имя "array". В данном случае имя не имеет особого значения, но она помогает понять программисту с какими данными работает данный массив.)
    // your code here
    let sum = 0; // Новая переменная, которой будет присвоено значение суммы всех шагов в цикле при его завершении
    for ( // решение через цикл for
        let i = 0; // Создаем переменную в цикле и присваиваем ей значение 0 (так как нам нужно будет перебрать каждое значение в массиве начиная с первого, а первое значение массиве имеет индекс равный нулю).
        i < array.length; // Значение к которому стремится переменная i. В данном случае она стремится к значению длинны массива. Так как метод "length" возвращает длинну массива.
        i++ // Шаг в данном цикле происходит со значением равным единице. Через оператор присваивания можно записать как: i += 1. Или полная запись выглядит как: (i = i + 1).
    ) {
        sum += array[i]; // Тело цикла. Переменной объявленной перед циклом добавляется значение array[i]. Другая запись: (result = result + array[i]). Выполняется столько раз, сколько этого потребуется в цикле
    }
    let result = array.length > 0 // Начало тернарного оператора, при котором. Объявляется переменная RESULT. Проверяем условие при котором длинна массива(операнда функции) больше нуля. 
        ? (sum / array.length) // Если условие выполняется, то производится деление переменной (SUM) -> (значение которой мы получили выше) / На длинну вводного массива(операнда функции), которую мы подсчитываем используя метод length
        : 0; // Если условие не выполняется, т.е. массив пуст, получаем ноль.
    return result; // При выходе из цикла вернем значение переменной. 
}

console.log(findAverage([1, 23, 3, 4, 17]));